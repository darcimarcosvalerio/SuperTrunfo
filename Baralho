// Baralho.java
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import java.util.Random;

public class Baralho {
    private List<Carta> cartas;

    public Baralho() {
        this.cartas = new ArrayList<>();
    }

    public void adicionarCarta(Carta carta) {
        this.cartas.add(carta);
    }

    public void embaralhar() {
        Collections.shuffle(cartas, new Random()); // Usando Random para um embaralhamento melhor
    }

    // Distribui um número especificado de cartas
    public List<Carta> distribuir(int numCartas) {
        if (numCartas > cartas.size()) {
            throw new IllegalArgumentException("Não há cartas suficientes no baralho para distribuir.");
        }
        List<Carta> cartasDistribuidas = new ArrayList<>(cartas.subList(0, numCartas));
        cartas.subList(0, numCartas).clear(); // Remove as cartas distribuídas do baralho
        return cartasDistribuidas;
    }

    // Puxa uma única carta
    public Carta puxarCarta() {
        if (cartas.isEmpty()) {
            return null; // Não há mais cartas
        }
        return cartas.remove(0); // Remove e retorna a carta do topo
    }

    public int tamanho() {
        return cartas.size();
    }

    public boolean estaVazio() {
        return cartas.isEmpty();
    }
}
